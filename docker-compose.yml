version: '3.8'

services:
  postgresql:
    container_name: ms_postgresql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tomi1992
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
      - ./init-multiple-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: ms_mongodb
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    networks:
      - microservices-net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgresql:5432/keycloakdb
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=tomi1992
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    networks:
      - microservices-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./data/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - microservices-net

  #datasource: http://prometheus:9090
  grafana:
    image: grafana/grafana:latest
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    user: root
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USER_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  pgadmin:
